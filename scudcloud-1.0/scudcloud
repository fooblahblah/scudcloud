#!/usr/bin/env python3
import os
import sys
from PyQt5 import QtGui

def get_install_dir():
    """
    Rather than using an inflexible value of '/opt/scudcloud', we now assume
    that the 'lib' and 'resources' dir will be in the same directory as the
    'scudcloud' executable.  This method sets the install dir to always be
    that directory.
    """
    return os.path.dirname(os.path.realpath(__file__))

# Append the lib directory in our installation path to get remaining libraries.
sys.path.append(os.path.join(get_install_dir(), 'lib'))
from resources import Resources
from scudcloud import ScudCloud
from qsingleapplication import QSingleApplication

# If the environment variable XDG_CONFIG_HOME is non-empty, CONFDIR is ignored
# and the configuration directory will be $XDG_CONFIG_HOME/scudcloud instead.
CONFDIR = '~/.config/scudcloud'

def main():
    Resources.INSTALL_DIR = get_install_dir()
    app = QSingleApplication(sys.argv)
    app.setApplicationName(Resources.APP_NAME)
    app.setWindowIcon(QtGui.QIcon(Resources.get_path('scudcloud.png')))
    args = parse_arguments()
    ScudCloud.debug = args.debug
    ScudCloud.minimized = True if args.minimized is True else None
    ScudCloud.plugins = False if args.no_plugins is True else True
    try:
        settings_path = load_settings(args.confdir)
    except:
        print("Configuration directory "+args.confdir+" could not be created! Exiting...")
        raise SystemExit()
    main = ScudCloud(settings_path=settings_path)
    app.singleStart(main, "scudcloud.pid")
    main.restore()
    sys.exit(app.exec_())

def load_settings(confdir):
    if not os.path.isdir(confdir):
        os.makedirs(confdir)
    if confdir not in sys.path:
        sys.path[0:0] = [confdir]
    return confdir

def parse_arguments():
    from argparse import ArgumentParser
    from os.path import expanduser
    if 'XDG_CONFIG_HOME' in os.environ and os.environ['XDG_CONFIG_HOME']:
        default_confdir = os.environ['XDG_CONFIG_HOME'] + '/scudcloud'
    else:
        default_confdir = CONFDIR
    parser = ArgumentParser()
    parser.add_argument('--confdir',    dest='confdir',      metavar='dir', default=default_confdir, help="change the configuration directory")
    parser.add_argument('--debug',      dest='debug',        type=bool,     default=False,           help="enable webkit debug console (default: False)")
    parser.add_argument('--minimized',  dest='minimized',    type=bool,     default=False,           help="start minimized to tray (default: False)")
    parser.add_argument('--no_plugins', dest='no_plugins',   type=bool,     default=False,           help="disable web plugins (default: False)")
    args = parser.parse_args()
    args.confdir = expanduser(args.confdir)
    return args

if __name__ == '__main__':
    main()
